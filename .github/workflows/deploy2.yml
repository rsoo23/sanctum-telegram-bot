name: CI/CD Workflow

on:
  push:
    branches:
    - dev
    - main

jobs:
  build_prod:
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'

    env:
      ENV: production
      GA_ID_PRODUCTION: ${{ secrets.GA_ID_PRODUCTION }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download and unzip Cocos Creator
        run: |
          curl -o CocosCreator.zip https://sanctum.s3.ap-southeast-1.amazonaws.com/CocosCreator.zip
          unzip -q CocosCreator.zip -d /Applications

      - name: Inject Google Analytics into index.ejs
        run: |
          chmod +x ./cicd_scripts/inject_ga.sh
          ./cicd_scripts/inject_ga.sh
    
      - name: Build Cocos Creator project
        run: |
          /Applications/CocosCreator.app/Contents/MacOS/CocosCreator --project ./Game --build "platform=web-mobile;buildPath=./Game/build;name=sanctum-telegram-game;platform=web-mobile;startScene=27507cdc-65b2-429e-8af5-395ac1f19b0e;replaceSplashScreen=true;debug=false"
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: prod_build
          path: ./Game/build/web-mobile/*
          error: "Error uploading prod_build"

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: prod_build
          
      - name: Notify on Discord
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            message="[sanctum-telegram-game] [build_prod] succeeded";
          else
            message="[sanctum-telegram-game] [build_prod] failed";
          fi
          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"${message}\"}" ${{ secrets.DISCORD_WEBHOOK_URL }}

  build_staging:
    runs-on: macos-latest
    if: github.ref == 'refs/heads/dev'

    env:
      ENV: staging
      GA_ID_STAGING: ${{ secrets.GA_ID_STAGING }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download and unzip Cocos Creator
        run: |
          curl -o CocosCreator.zip https://sanctum.s3.ap-southeast-1.amazonaws.com/CocosCreator.zip
          unzip -q CocosCreator.zip -d /Applications

      - name: Inject Google Analytics into index.ejs
        run: |
          chmod +x ./cicd_scripts/inject_ga.sh
          ./cicd_scripts/inject_ga.sh
    
      - name: Build Cocos Creator project
        run: |
          /Applications/CocosCreator.app/Contents/MacOS/CocosCreator --project ./Game --build "platform=web-mobile;buildPath=./Game/build;name=sanctum-telegram-game;platform=web-mobile;startScene=27507cdc-65b2-429e-8af5-395ac1f19b0e;replaceSplashScreen=true;debug=false"
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: staging_build
          path: ./Game/build/web-mobile/*
          error: "Error uploading staging_build"

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: staging_build
          
      - name: Notify on Discord
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            message="[sanctum-telegram-game] [staging_prod] succeeded";
          else
            message="[sanctum-telegram-game] [staging_prod] failed";
          fi
          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"${message}\"}" ${{ secrets.DISCORD_WEBHOOK_URL }}
